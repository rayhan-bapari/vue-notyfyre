{"version":3,"sources":["../src/core/service.ts","../src/plugin/index.ts","../src/components/NotyfyreContainer.vue","../src/components/NotyfyreContainer.vue","unplugin-vue:\u0000/plugin-vue/export-helper","../src/index.ts"],"sourcesContent":["import { reactive } from 'vue';\nimport type { NotyItem, NotyOptions, NotyType } from '@/core/types';\n\nconst defaults: Required<NotyOptions> = {\n\tposition: 'top-center',\n\tautoClose: 3000,\n\tprogress: true,\n};\n\nlet idCounter = 1;\n\nexport const store = reactive({\n\toptions: { ...defaults } as Required<NotyOptions>,\n\titems: [] as NotyItem[],\n});\n\nfunction makeOptions(opts?: NotyOptions): Required<NotyOptions> {\n\treturn { ...store.options, ...(opts || {}) };\n}\n\nfunction push(type: NotyType, title: string, opts?: NotyOptions) {\n\tconst options = makeOptions(opts);\n\tconst item: NotyItem = {\n\t\tid: idCounter++,\n\t\ttype,\n\t\ttitle,\n\t\toptions,\n\t\tcreatedAt: Date.now(),\n\t};\n\tstore.items.push(item);\n\n\tif (options.autoClose !== false) {\n\t\tsetTimeout(() => remove(item.id), options.autoClose);\n\t}\n}\n\nexport function remove(id: number) {\n\tconst i = store.items.findIndex(t => t.id === id);\n\tif (i !== -1) store.items.splice(i, 1);\n}\n\nexport function clear() {\n\tstore.items.splice(0, store.items.length);\n}\n\nexport function setDefaults(opts: NotyOptions) {\n\tstore.options = { ...store.options, ...opts };\n}\n\nexport const api = {\n\tsuccess: (title: string, opts?: NotyOptions) => push('success', title, opts),\n\terror: (title: string, opts?: NotyOptions) => push('error', title, opts),\n\twarning: (title: string, opts?: NotyOptions) => push('warning', title, opts),\n\tinfo: (title: string, opts?: NotyOptions) => push('info', title, opts),\n\n\toptions: (opts: NotyOptions) => setDefaults(opts),\n\tclear,\n\tsetDefaults,\n\tgetNotifications: () => store.items.slice(),\n};\n","import type { App } from 'vue';\nimport { api } from '@/core/service';\n\ndeclare module 'vue' {\n  interface ComponentCustomProperties {\n    $notyfyre: typeof api;\n  }\n}\n\nexport default {\n  install(app: App) {\n    app.config.globalProperties.$notyfyre = api;\n    if (typeof window !== 'undefined') {\n      // @ts-ignore\n      window.notyfyre = api;\n    }\n  }\n};\n\nexport { api as notyfyre };\n","<script setup lang=\"ts\">\nimport { computed } from 'vue';\nimport { store, remove } from '@/core/service';\nimport type { NotyItem, NotyPosition } from '@/core/types';\n\nconst groups = computed<Record<NotyPosition, NotyItem[]>>(() => {\n    const map: Record<NotyPosition, NotyItem[]> = {\n        'top-left': [],\n        'top-center': [],\n        'top-right': [],\n        'bottom-left': [],\n        'bottom-center': [],\n        'bottom-right': []\n    };\n    for (const t of store.items) map[t.options.position].push(t);\n    return map;\n});\n</script>\n\n<template>\n    <Teleport to=\"body\">\n        <div v-for=\"(items, pos) in groups\" :key=\"pos\" class=\"notyfyre__container\" :class=\"`pos-${pos}`\">\n            <TransitionGroup name=\"notyfade\">\n                <div v-for=\"t in items\" :key=\"t.id\" class=\"notyfyre noty--card\" :class=\"`type-${t.type}`\">\n                    <div class=\"noty--title\">{{ t.title }}</div>\n\n                    <div v-if=\"t.options.progress && t.options.autoClose !== false\" class=\"noty--progress\"\n                        :style=\"{ animationDuration: (t.options.autoClose || 0) + 'ms' }\"></div>\n\n                    <button class=\"noty--close\" @click=\"remove(t.id)\">×</button>\n                </div>\n            </TransitionGroup>\n        </div>\n    </Teleport>\n</template>\n","<script setup lang=\"ts\">\nimport { computed } from 'vue';\nimport { store, remove } from '@/core/service';\nimport type { NotyItem, NotyPosition } from '@/core/types';\n\nconst groups = computed<Record<NotyPosition, NotyItem[]>>(() => {\n    const map: Record<NotyPosition, NotyItem[]> = {\n        'top-left': [],\n        'top-center': [],\n        'top-right': [],\n        'bottom-left': [],\n        'bottom-center': [],\n        'bottom-right': []\n    };\n    for (const t of store.items) map[t.options.position].push(t);\n    return map;\n});\n</script>\n\n<template>\n    <Teleport to=\"body\">\n        <div v-for=\"(items, pos) in groups\" :key=\"pos\" class=\"notyfyre__container\" :class=\"`pos-${pos}`\">\n            <TransitionGroup name=\"notyfade\">\n                <div v-for=\"t in items\" :key=\"t.id\" class=\"notyfyre noty--card\" :class=\"`type-${t.type}`\">\n                    <div class=\"noty--title\">{{ t.title }}</div>\n\n                    <div v-if=\"t.options.progress && t.options.autoClose !== false\" class=\"noty--progress\"\n                        :style=\"{ animationDuration: (t.options.autoClose || 0) + 'ms' }\"></div>\n\n                    <button class=\"noty--close\" @click=\"remove(t.id)\">×</button>\n                </div>\n            </TransitionGroup>\n        </div>\n    </Teleport>\n</template>\n","\nexport default (sfc, props) => {\n  const target = sfc.__vccOpts || sfc;\n  for (const [key, val] of props) {\n    target[key] = val;\n  }\n  return target;\n}\n","import Plugin from '@/plugin/index';\nexport * from '@/core/types';\nexport { notyfyre } from '@/plugin/index';\nexport { default as NotyfyreContainer } from '@/components/NotyfyreContainer.vue';\nimport './styles/style.css';\n\nexport default Plugin;\n"],"mappings":"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","names":[]}